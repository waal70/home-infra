---
- name: Perform setup for Debian-based systems
  ansible.builtin.include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Install Docker packages (with downgrade option).
  ansible.builtin.package:
    name: "{{ docker_packages }}"
    state: "{{ docker_packages_state }}"
    allow_downgrade: true
  notify: Restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']

- name: Install docker-compose-plugin (with downgrade option).
  ansible.builtin.package:
    name: "{{ docker_compose_package }}"
    state: "{{ docker_compose_package_state }}"
    allow_downgrade: true
  notify: Restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: docker_install_compose_plugin | bool and ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']

- name: Ensure /etc/docker/ directory exists.
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    mode: "0755"
  when: docker_daemon_options.keys() | length > 0

- name: Configure Docker daemon options.
  ansible.builtin.copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: "0644"
  when: docker_daemon_options.keys() | length > 0
  notify: Restart docker

- name: Ensure Docker is started and enabled at boot.
  ansible.builtin.service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: docker_service_manage | bool

- name: Ensure handlers are notified now to avoid firewall conflicts.
  ansible.builtin.meta: flush_handlers

- name: Include tasks for docker compose
  ansible.builtin.include_tasks: docker-compose.yml
  when: docker_install_compose | bool

- name: Get docker group info using getent.
  ansible.builtin.getent:
    database: group
    key: docker
    split: ":"
  when: docker_users | length > 0

- name: Check whether there are any users to add to the docker group.
  ansible.builtin.set_fact:
    at_least_one_user_to_modify: true
  when:
    - docker_users | length > 0
    - item not in ansible_facts.getent_group["docker"][2]
  with_items: "{{ docker_users }}"

- name: Include tasks to handle additional users
  ansible.builtin.include_tasks: docker-users.yml
  when: at_least_one_user_to_modify is defined

- name: Deploy Portainer Agent when this is a jumpserver
  community.docker.docker_container:
    name: "portainer_agent"
    image: "portainer/agent:{{ portainer_agent_version }}"
    state: started
    detach: true
    restart_policy: always
    published_ports: "9001:9001"
    image_name_mismatch: "recreate"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
  when: ('jumpservers' in group_names)

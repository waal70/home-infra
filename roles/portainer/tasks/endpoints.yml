---
- name: Get Endpoints
  ansible.builtin.uri:
    url: "{{ portainer_endpoint }}/endpoints"
    method: GET
    return_content: true
    validate_certs: false
    headers:
      Authorization: Bearer {{ (auth_token.content | from_json).jwt }}
  register: portainer_known_endpoints_raw

- name: Save endpoints as fact
  ansible.builtin.set_fact:
    portainer_known_endpoints: "{{ portainer_known_endpoints_raw.json | map(attribute='Name') | list }}"

- name: "Show known endpoints"
  ansible.builtin.debug:
    msg: "{{ portainer_known_endpoints }}"

- name: "Ensure curl is present on the system"
  ansible.builtin.apt:
    name:
      - curl
    state: present

# Added -k to not verify SSL certificates
- name: Define Endpoints
  ansible.builtin.shell: |
    curl --silent --show-error -k -o - {{ portainer_endpoint }}/endpoints \
      -H "Authorization: Bearer {{ (auth_token.content|from_json).jwt }}" \
      -F "Name={{ item.name }}" \
      -F "URL={{ item.url }}" \
      -F "EndpointCreationType=2" \
      -F "TLS=true" -F "TLSSkipVerify=true" -F "TLSSkipClientVerify=true"
  with_items:
    - "{{ endpoints | list }}"
  when: item.name not in portainer_known_endpoints
  register: response
  tags: [skip_ansible_lint]

- name: "Debug response"
  ansible.builtin.debug:
    msg: "Endpoint {{ item.item.name }}, Response: {{ item.stdout | default('{}') | from_json }}"
  with_items:
    - "{{ response.results }}"

- name: Verifying calls
  ansible.builtin.fail:
    msg: "Could not add endpoint: {{ item.item.name }}"
  when: item.stdout is defined and (item.stdout|from_json).err is defined
  with_items:
    - "{{ response.results }}"

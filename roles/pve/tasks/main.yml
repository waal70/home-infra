# tasks file for role pve
# 09-12-2023: Andr√©
---
- name: Import inet6 tasks for the pve-role
  ansible.builtin.import_tasks: inet6-manual.yml

# - name: Ensure gpg is installed
#   ansible.builtin.apt:
#     name: gpg
#     state: present

# - name: Ensure wget is installed
#   ansible.builtin.apt:
#     name: wget
#     state: present

# Andre 01-2024: add the proxmox repository using the new command
- name: Add Proxmox' repository
  ansible.builtin.deb822_repository:
    name: proxmox
    types: [deb]
    uris: "{{ pve_repository }}"
    suites: "{{ ansible_distribution_release }}"
    components: "{{ pve_components }}"
    signed_by: https://enterprise.proxmox.com/debian/proxmox-release-{{ ansible_distribution_release }}.gpg

- name: Remove os-prober package
  ansible.builtin.apt:
    name: os-prober
    state: absent

# Andre 04-2024: update cache in order to find the proxmox packages
- name: Run apt full-upgrade on repository changes - always
  ansible.builtin.apt:
    update_cache: true
    # cache_valid_time: 3600 Andre 04-2024
    upgrade: full
  retries: 2
  register: _full_upgrade
  until: _full_upgrade is succeeded

- name: Perform system upgrades
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    upgrade: full
  when: pve_run_system_upgrades | bool
  retries: 2
  register: _system_upgrade
  until: _system_upgrade is succeeded

# Order is dictated by: https://pve.proxmox.com/wiki/Install_Proxmox_VE_on_Debian_12_Bookworm#Install_the_Proxmox_VE_Kernel
# Kernel install should be followed by a reboot!
- name: Install kernel over top of Debian kernel
  ansible.builtin.apt:
    name: proxmox-default-kernel
    state: present
  register: default_kernel

- name: Reboot after pve-kernel install # noqa: no-handler
  ansible.builtin.reboot:
    msg: Mandatory reboot after pve-kernel install
  when: default_kernel.changed

- name: Identify packages required for Proxmox install
  ansible.builtin.import_tasks: identify_needed_packages.yml

- name: Install Proxmox VE and related packages
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    name: "{{ _pve_install_packages }}"
    state: "{{ 'latest' if pve_run_proxmox_upgrades else 'present' }}"
  retries: 2
  register: _proxmox_install
  until: _proxmox_install is succeeded

- name: Remove old Debian kernels after fresh install of pve
  ansible.builtin.apt:
    pkg:
      - linux-image-amd64
      - linux-image-6.1*
    state: absent
    purge: true

- name: Update grub
  ansible.builtin.command: update-grub
  changed_when: true

- name: Reduce rrdcached writes
  ansible.builtin.lineinfile:
    path: /etc/default/rrdcached
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state | default('present') }}"
  with_items:
    - { regexp: "^#?WRITE_TIMEOUT", line: WRITE_TIMEOUT=3600 }
    - { regexp: "^#?JOURNAL_PATH", line: "#JOURNAL_PATH=/var/lib/rrdcached/journal/" }
  notify: Restart rrdcached

- name: Block to correct for no active subscription
  when: "'pve-no-subscription' in pve_components" # bugfix 04-2024: repository_line no longer exists
  block:
    - name: Remove automatically installed PVE Enterprise repo configuration
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        filename: pve-enterprise
        state: absent
      with_items:
        - deb https://enterprise.proxmox.com/debian {{ ansible_distribution_release }} pve-enterprise
        - deb https://enterprise.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-enterprise

    - name: Remove subscription check wrapper function in web UI
      ansible.builtin.lineinfile:
        path: /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
        line: "        orig_cmd(); return;"
        insertafter: "^\\s+checked_command: function\\(orig_cmd\\) {$"
        firstmatch: true
        backup: true
      when:
        - pve_remove_subscription_warning | bool

- name: Make doubly sure no inet6 address will be obtained
  ansible.builtin.import_tasks: inet6-manual.yml

- name: Import kernel updates tasks
  ansible.builtin.import_tasks: kernel_updates.yml

- name: Set password for root user
  ansible.builtin.user:
    name: root
    password: "{{ root_pass }}"

# This block is there to slim down the install afterwards
- name: Block to slim down the installation
  when: pve_slim | bool
  block:
    - name: Disable and mask services that are not necessary
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        enabled: false
        masked: true
        state: stopped
      with_items:
        - pve-ha-lrm
        - pve-ha-crm
        - corosync

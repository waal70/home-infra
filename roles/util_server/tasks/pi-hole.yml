---
# util_server-role/tasks/pi-hole.yml
- name: Ensure prerequisites are present for pihole installation
  ansible.builtin.apt:
    name:
      - curl
    state: present

- name: Create pihole group
  ansible.builtin.group:
    name: pihole
    state: present

- name: Create pihole user
  ansible.builtin.user:
    name: pihole
    group: pihole
    create_home: false
    shell: /usr/sbin/nologin
    state: present

- name: Create the pihole config directory if it does not exist yet
  ansible.builtin.file:
    path: /etc/pihole
    state: directory
    owner: pihole
    group: pihole
    mode: "0755"

- name: Prepare the setupVars in order to make unattended install
  ansible.builtin.template:
    src: etc/pihole/setupVars.conf.j2
    dest: /etc/pihole/setupVars.conf
    mode: "0644"

- name: Install pi-hole by piping to bash (may be insecure) # noqa: command-instead-of-module
  ansible.builtin.shell:
    cmd: "curl -sSL https://install.pi-hole.net | bash /dev/stdin --unattended"
  when: reinstall_pihole
  changed_when: true

- name: Import tasks to set-up the correct adlists, and white- and blacklists
  ansible.builtin.import_tasks: pihole-listmanage.yml

- name: Create the dnsmasq config directory if it does not exist yet
  ansible.builtin.file:
    path: /etc/dnsmasq.d
    state: directory
    mode: "0755"

- name: Place the custom configuration into the dnsmasq.d directory
  ansible.builtin.template:
    src: etc/dnsmasq.d/99-pihole.conf.j2
    dest: /etc/dnsmasq.d/99-pihole.conf
    mode: "0644"

- name: Place the file with custom DNS entries into pihole configuration folder
  ansible.builtin.copy:
    dest: /etc/pihole/custom.list
    src: custom.list
    mode: "0644"
    owner: pihole
    group: pihole
    remote_src: false

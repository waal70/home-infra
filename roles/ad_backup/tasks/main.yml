---
# tasks file for ad_backup
- name: Check the SAMBA database for errors and correct if necessary
  ansible.builtin.command:
    cmd: "samba-tool dbcheck -U{{ smb_username }} --fix --yes"
  register: dbcheck_output
  changed_when: "dbcheck_output.rc != 0"

- name: Give user the summary output from the dbcheck command
  ansible.builtin.debug:
    msg: "{{ dbcheck_output.stdout_lines | last }}"

- name: Backup SAMBA AD DC block
  when: "'0 errors' in dbcheck_output.stdout_lines | last"
  block:
    - name: Create an online backup-file on server {{ inventory_hostname }}
      ansible.builtin.command:
        cmd: >
          samba-tool
          domain backup online
          "--targetdir={{ backup_path }}"
          "--server={{ inventory_hostname }}"
          "-U{{ smb_username }}"
          "--password={{ smb_password }}"
      register: dbbackup_output
      changed_when: "dbbackup_output.rc != 0"

    - name: Display output
      ansible.builtin.debug:
        msg: "{{ dbbackup_output.stdout_lines | last }}"

    - name: Now find the most recent bz2 file in the backup-path
      ansible.builtin.find:
        paths: "{{ backup_path }}"
        patterns: "samba-backup*.bz2"
        age: "-1h"
      register: backupfiles

    - name: Fetch the backup-files to local machine
      ansible.builtin.fetch:
        src: "{{ item.path }}"
        dest: "temporary-files/{{ inventory_hostname }}/"
        flat: true
      with_items: "{{ backupfiles.files }}"

    - name: Destroy the originals
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ backupfiles.files }}"

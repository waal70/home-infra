---
- name: Get current filesystem features
  command: debugfs -R features {{ root_partition }}
  register: results

- name: Modify GRUB Configuration if rootflags not set
  command: grep -q 'GRUB_CMDLINE_LINUX=".*rootflags=noatime,nodiratime.*"' /etc/default/grub
  register: grub_config_check
  failed_when: "grub_config_check.rc not in [ 0, 1 ]"
  changed_when: false  # Do not mark as changed if the command fails to find the string

- name: Modify GRUB Configuration because noatime,nodiratime not set
  replace:
    path: /etc/default/grub
    regexp: 'GRUB_CMDLINE_LINUX="(.*)"'
    replace: 'GRUB_CMDLINE_LINUX="\1 rootflags=noatime,nodiratime"'
  when: not grub_config_check.rc == 0
  become: true

- name: Create variable for filesystem-check
  set_fact:
    fs_features: "{{ results.stdout_lines }}"
- debug:
    var: fs_features

- name: Execute sequence of commands to emergency sync, remount ro, clear has_journal and reboot
  ansible.builtin.raw: echo u > /proc/sysrq-trigger && echo s > /proc/sysrq-trigger && sleep 2 && tune2fs -O ^has_journal {{ root_partition }} && sleep 2 && e2fsck -fy {{ root_partition }} && echo s > /proc/sysrq-trigger && echo b > /proc/sysrq-trigger &
  become: true
  become_user: root
  when: fs_features is search("has_journal")

- name: Wait for system to become reachable
  wait_for_connection:
    delay: 10
    timeout: 60
  when: fs_features is search("has_journal")

- name: Get filesystem features after command-sequence
  command: debugfs -R features {{ root_partition }}
  register: resultsafter

- name: Amend variable for filesystem-check
  set_fact:
    fs_features: "{{ resultsafter.stdout_lines }}"
- debug:
    var: fs_features

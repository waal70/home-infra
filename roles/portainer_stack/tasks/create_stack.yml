---
# - name: "Authenticate with Portainer API for {{ stack_name }}"
#   ansible.builtin.uri:
#     url: "{{ portainer_endpoint }}/auth"
#     method: POST
#     headers:
#       Content-Type: "application/json"
#     body_format: json
#     body:
#       username: "{{ admin_user }}"
#       password: "{{ admin_password }}"
#   register: auth_response
#   changed_when: false
#   ignore_errors: true


# - name: "Check authentication response for {{ stack_name }}"
#   ansible.builtin.fail:
#     msg: "Failed to authenticate with Portainer API"
#   when: "auth_response.status != 200"


# - name: "Get JWT token from authentication response for {{ stack_name }}"
#   ansible.builtin.set_fact:
#     jwt_token: "{{ auth_response.json.jwt }}"
#   when: auth_response.status == 200


- name: "Get stack information from Portainer for {{ stack_name }}"
  ansible.builtin.uri:
    url: "{{ portainer_endpoint }}/stacks"
    method: GET
    headers:
      Authorization: "Bearer {{ auth_token }}"
  register: get_stack_response
  when: auth_token is defined


- name: "Debug get_stack_response {{ stack_name }} "
  ansible.builtin.debug:
    var: get_stack_response


- name: "Check if the stack exists - {{ stack_name }} "
  ansible.builtin.set_fact:
    stack_not_exists: "{{ response_data | json_query('[?Name == `' + stack_name + '`]') | length <= 0 }}"
  vars:
    response_data: "{{ get_stack_response.json }}"

- name: "Setup folder for appdata for {{ stack_name }}"
  ansible.builtin.file:
    path: "/home/{{ username }}/appdata/{{ stack_name }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'
  when: auth_token is defined and stack_not_exists
  ignore_errors: true

- name: "Setup sub folders for {{ stack_name }}"
  ansible.builtin.file:
    path: "/home/{{ username }}/appdata/{{ stack_name }}/{{ sub_directory }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'
  loop: "{{ directories }}"
  loop_control:
    loop_var: sub_directory
  when: directories is defined and directories | length > 0 and stack_not_exists

- name: "Create a stack in Portainer by the name of {{ stack_name }}"
  ansible.builtin.uri:
    url: "{{ portainer_endpoint }}/stacks/create/standalone/string?endpointId={{ endpoint_id }}"
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ jwt_token }}"
    body_format: json
    body:
      name: "{{ stack_name }}"
      fromAppTemplate: false
      StackFileContent: "{{ stack_compose }}"
  register: create_stack_response
  when: jwt_token is defined and stack_not_exists

- name: "Check stack creation response for {{ stack_name }}"
  ansible.builtin.fail:
    msg: "Failed to create stack in Portainer"
  when: stack_not_exists and create_stack_response.status != 200
